(*
Copyright 2017, Sjors van Gelderen
*)

module ASM

type Register =
    | A
    | X
    | Y

type Accumulator = Unit
type Implied = Unit
type Immediate = byte
//type Relative = byte // Not used?
type Absolute = int16
type ZeroPage = byte
type AbsoluteIndexed = byte * Register
type ZeroPageIndexed = byte * Register
type DirectIndexed = byte * Register
type Indirect = byte * int16
type IndirectIndexed = byte * Register
type Label = string

(*
Old union
type Operator =
    | Accumulator
    | Implied
    | Immediate of byte
    | Relative of byte // Not used? 
    | Absolute of int16
    | ZeroPage of byte
    | AbsoluteIndexed of byte * Register
    | ZeroPagedIndexed of byte * Register
    | DirectIndexed of byte * Register
    | Indirect of byte * int16
    | IndirectIndexed of byte * Register
    | Label of string
*)

(*
type Operator =
    | Accumulator
    | Implied
    | Immediate
    //| Relative // Not used?
    | Absolute
    | ZeroPage
    | AbsoluteIndexed
    | ZeroPagedIndexed
    | DirectIndexed
    | Indirect
    | IndirectIndexed
    | Label
*)

type Instruction =
    | ADC of Immediate | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed | IndirectIndexed
    | AND of Immediate | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed | IndirectIndexed
    | ASL of Accumulator | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed
    | BCC of Label
    | BCS of Label
    | BEQ of Label
    | BIT of ZeroPage | Absolute
    | BMI of Label
    | BNE of Label
    | BPL of Label
    | BRK of Implied
    | BVC of Label
    | BVS of Label
    | CLC of Implied
    //| CLD of Implied // Possibly unsupported by 2A03
    | CLI of Implied
    | CLV of Implied
    | CMP of Immediate | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed | IndirectIndexed
    | CPX of Immediate | ZeroPage | Absolute
    | CPY of Immediate | ZeroPage | Absolute
    | DEC of ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed
    | DEX of Implied
    | DEY of Implied
    | EOR of Immediate | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed | IndirectIndexed
    | INC of ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed
    | INX of Implied
    | INY of Implied
    | JMP of Absolute | Indirect
    | JSR of Absolute
    | LDA of Immediate | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed | IndirectIndexed
    | LDX of Immediate | ZeroPage | Absolute | AbsoluteIndexed
    | LDY of Immediate | ZeroPage | Absolute | AbsoluteIndexed
    | LSR of Accumulator | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed
    | NOP of Implied
    | ORA of Immediate | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed | IndirectIndexed
    | PHA of Implied
    | PHP of Implied
    | PLA of Implied
    | PLP of Implied
    | ROL of Accumulator | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed
    | ROR of Accumulator | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed
    | RTI of Implied
    | RTS of Implied
    | SBC of Immediate | ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed | IndirectIndexed
    | SEC of Implied
    | SED of Implied
    | SEI of Implied
    | STA of ZeroPage | ZeroPageIndexed | Absolute | AbsoluteIndexed | IndirectIndexed
    | STX of ZeroPage | ZeroPageIndexed | Absolute
    | STY of ZeroPage | ZeroPageIndexed | Absolute
    | TAX of Implied
    | TAY of Implied
    | TSX of Implied
    | TXA of Implied
    | TXS of Implied
    | TYA of Implied

let ast =
    [
        LDX (Immediate (byte 0xFF))
        STX (Absolute (int16 0x0000))
    ]
